(a) What are some Pros and Cons of Agile development (vs. non-Agile)? List
    2 of each.
    - PROS:
        - Agile development allows for more resilience to scope changes in the
          prject, which means the development and final product requirements
          can be more adaptable for the client.
        - Agile development allows for constant communication with the client
          so that they have a better idea of what's going on, and if they need
          a feature changed it can be done so in real time.
    - CONS:
        - One con of Agile-development is "scope creep," which implies that
          without clear boundaries, features can easily be added to a project
          over time, leading to uncontrolled scope expansion
        - Agile development relies on highly self-organized and motivated teams
          to function the most effectively

(b) Explain the role and responsibilities of the Scrum Master vs. the Product
    Owner.
    - The Scrum Master is responsible for managing all scrum related tasks.
      This includes managing the JIRA tooling, facilitating sprints and meetings,
      and standups.
    - The Product Owner is responsible for setting the direction for the team, as
      well as handling release and stakeholder management.

(c) What are the 3 types of meetings that happen during a sprint cycle? List at
    least 2 points on what needs to be discussed during each of these meetings.
    (1) Sprint Planning Meetings
        - Determines what needs to be completed in the coming sprint
        - Determines story points and assign stories to teams
    (2) Daily Scrum/Standup Meetings
        - Discuss work that has been completed
        - Discuss work plan for the upcoming day and any blockers to that work
    (3) Sprint Retrospective Meetings
        - Discuss completed work
        - Move incomplete work to backlog to close the sprint

(d) Differentiate between Eic, Story, Bug, and Task issue types in JIRA.
    - Epic: Captures a large body of work that can be broken down into several
            smaller stories
    - Story: A software system requirement that is expressed in a few short
             sentences
    - Bug: Used to track problems or defects within a software system
    - Task: Represents a piece of work that needs to be completed within a project,
            typically a smaller, individual action that contributes to a larger
            feature or bug fix.